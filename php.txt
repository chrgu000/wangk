html
1.disabled=”disabled”：禁用 ：这一项不会提交到服务器【相对于表单中没有这个东西】
  readonly=”readonly”：只读 ：值可以继续提交。
  效果：都是不能填写数据，只能看到。
2.全角的空格独占一个汉字
3.table单元格常用的属性：cellpadding cellspacing text-align valign colspan(横向) rowspan
4.input设置最大宽度以及大小(size),长度也可以用width
5.html结构:除了展示给人看,还有和浏览器(搜索引擎),服务器交互,所以其还有其他属性
6.a标签是跳转,跳出去就是链接;否则就是锚点(1.定锚点,用名字来标识;2.跳转时在href中制定要跳去的锚点名称)
7.列表:无序有序
8.框架集:后台布局使用framset frame rows cols
9.ifame在一个窗口内部的某个位置再嵌入一个窗口,可以做无刷新图片上传

css
1.关于尺寸:
	px：像素
	%：百分比【相对于上级元素】
	em：字体大小的倍数
	cm：厘米
2.选择器组：将多个相同的放在一起,格式:xxx,bbb,ccc{}
3.显示的宽、高计算方式box-sizing: border-box
4.当指定宽、高之后，如果内容非常多就撑出去了。可以使用overflow对出现的内容进行设置：
5.box-shadow: 左右偏移量  上下偏移量   模糊程度   外扩范围   颜色   内外
6.角弧度 border-radius: xxp   xxpx  xxpx  xxpx;   左上  右上   右下  左下
7.定位HTML中的元素都是至左至向，至上向下一个挨一个排放时，我们可以使用position来对元素精确的定位
http://www.divcss5.com/rumen/r403.shtml
	绝对定位
	特点：
		1.脱离原文档流【飞起来了】
		2.原位置丢失，后面的元素会占用这个元素的位置
		3.可以使用left,top,right,和bottom设置相对于窗口中具体的位置

	相对定位
	属性：position:relative;
	特点：
		1. 脱离原文档流【飞起来了】
		2. 原位置保留，其他元素不能占用这个元素的位置
		3.可以使用left,top,right,和bottom设置相对于元素原来所在的位置定位

	固定定位
	属性：position:fixed;
	特点：
		1.脱离原文档流【飞起来了】
		2.原位置丢失，后面的元素被占用这个元素的位置
		3.可以使用left,top,right,和bottom设置相对于窗口定位
		4.滚动条滚动之后还在原位置
	##绝对变相对
	当一个元素设置成绝对定位时，如果这个元素祖先元素中有一个元素是绝对、相对或者固定定位的，
	那么这个元素就是相对于这个祖先元素定位。
	##案例：京东购物车 div1 div2
	##z-index：定位的层级
	当多个定位元素在同一个位置时可以使用z-index指定层级顺序
8.浮动
	属性：float: left|right;
	特点：
		1.脱离原文档流【飞起来了】
		2.原位置丢失，后面的元素会占用这个元素的位置
		3.元素会一直向左、或者向右浮动到上级的最边上
		4.一直向左或者向右直到遇到上一个浮动的元素【多个同方向浮动的元素不会重合会紧挨着上一个浮动的元素】
		5.浮动只会影响前边的元素，不会影响其后的
		6.浮动元素的容器会收缩,当所有元素都浮动之后，外边框就会收缩
		##浮动用来大布局：京东首页nav;小布局可以考虑定位
		

	清除浮动
		一个元素浮动之后，后面的元素会上移补位，如果不希望后面的元素上移【受到前面浮动元素的影响】，可以设置clear
		清除前面元素浮动对它的影响。
		属性：clear: left|right|both【清空左、右浮动的影响】

	浮动元素的容器收缩
		当所有元素都浮动之后，外边框就会收缩
		解决办法1：如果这三个框高度固定，那么可以直接给外边框设置一个固定的高，把这三个包括进来。
		解决办法2：如果三个框高度不确定，我们可以这样做：加一个div,设置前面元素的清除影响
9.前、后[伪类]
	css  :before:after
	可以使用这两个结合content属性就可以使用css在一个标签里面的前面或者后面添加内容。【使用CSS向标签里面添加内容】
	里面的内容js控制不了
	用途：加文字;优雅的解决浮动时外边框收缩的问题。

10.伪类选择器
	鼠标放上:hover
	例子：制作鼠标放上时的二级按钮
	HTML的结构 css样式  div:hover ul{dispaly:block}  定位设置
	##参见京东
11.CSS3 中 -webkit-, -moz-, -o-, -ms- 这些浏览器私有前缀可以移除:使用PostCSS的Autoprefixer插件可以解决这些问题
12.使用 @media 查询，你可以针对不同的媒体类型定义不同的样式
	@media screen and (max-width: 300px) {
	    body {
		background-color:lightblue;
	    }
	}
13.background: url('../images/icons.png') no-repeat;中的路径
	相对路径中：  ./  ： 当前目录     ../  ： 代表上级 ，   ../../ ：代表上上级
	background: url路径是当前的css所在的目录位置相对于站点的图片来说的 
14.font: nomal 12px/150% Arial,Verdana,"\5b8b\4f53"; /* 字体大小12px , 行高150% */
15.盒模型
 边框属性:border
	可以利用边框做一个效果图：四个三角形(内容宽高为0) ;做一个三角,需设置其他三个transparent：透明
 内边距属性：内容距离边框
	理解padding:50 100
 外边距属性:margion
	盒子与盒子之间的边距 某个盒子的top
	可设置盒子居中
	区别下text-align(盒子里文字居中)
 宽高:width height
	默认宽高是内容决定的
	当内容不确定时,min/max做限制,权限大于默认小于实际;可解决写死宽高的问题
 
 
 计算盒子宽高
	当宽高设置后，在设置其他属性宽高，则盒子的宽高也变了
	box-sizing：
		方式一、box-sizing: content-box
		这种方式我们平时必须非常小心的所有值计算好，理算错位置就不够大了！
		实际显示的宽、高 = width + 2 * 边框宽 + 2 * 内边距【不定是我们设置的width】
		方式二、box-sizing: border-box
		实际显示的宽 = width 
		实际显示的高 = height   
 溢出
	属性：overflow: hidden|scroll|auto;
	当指定宽、高之后，如果内容非常多就撑出去了。可以使用overflow对出现的内容进行设置：	
 
js
1. JS中有一些关键字【保留字】不能用来当变量名,default
2.变量
undefined,测试typeof(var)
定义了一个变量，但是还没有赋值时，这个变量的值就是这个类型的。我们一般不会把一个变量设置成这个值

null：空的意思。其实和上面的undefined一个意思都是没有的意思。
比如一个变量原来是有值，但现在我要把值去掉不要了，变成没值的变量就可以把变量设置为null。

string
单双引号的转义

array
当要在一个变量中同时保存多个值时就可以使用数组。
语法：
var 变量名 = [   值1  ,  值2  ,  值3 ......   ];
var 变量名 = new Aarry()??
读取：
for循环

多维数组
如果数组中的值又是数组那么这个数组就是多维数组。

object
一个变量中以键值对的方式存储多个值
var person = {name:'zhangsan',age:1}  //person.age
可以是普通字符串,也可以是函数
var person = {
	name:'zhangsan',
	hello:function(){
	}
}  


@所有的这些数据类型都可以混合使用，比如定义一个数组，然后数组中两个元素都是对象。



3.三目运算符
4.for循环
语法：
	for(初始值; 表达式; 自增)
	{
		代码块;
	}
5.for ... in ... 循环
主要用来循环一个对象中所有的键的：array[i]

6.continue和break
这两个一般只能用在循环【for,while,do-while】的大括号里面，用来控制循环的流程：
continue ; ：循环里面后面的代码不执行了直接进入下一次循环：
break：循环后面的代码不执行了，直接退出整个循环。
7.可以一次定义多个变量
8.定时器
9.除了应用在网页中之外，还广泛应用于手机游戏开发、服务器、nosql数据库等领域
10.函数
函数内部定义的变量，在函数外部不能使用【因为已经销毁了】
每次调用函数都是一个临时的内存地址，函数中的代码执行完之后这块内存就销毁了，所以在函数中的所有变量的值只在函数调用的过程中有效，函数执行完就没了【内存销毁】。
变量作用域分为全局和局部
参数

11.我们现在每次获取页面中的元素都要执行document.getElementById这个方法，比较麻烦，所以我们可以自己定义一个更简单的函数实现这个功能

12匿名函数
匿名函数：没有名字的函数。
用途一、绑定时 btn.click=function(){}
用途二、做为另一个函数的参数  setIntval(function(){},100);

13.递归函数
在一个函数内部又调用自身的函数。
比如求4！= 4*3*2*1
function cj(num){
	if(num==1){
		return 1;
	}else{
		return num*cj(num-1);
	}
}

14.js中自带的系统函数
parseInt和parseFloat
总结：只有以数字开头的字符串才能转。别的不能转，否则结果是NaN。
NaN是JS中提供的一种特殊的类型，代表非 数字，奇怪的是和自己都不相等
字符串的比较：只比较前面的字符，谁大谁就大

15.定时器 消除器
	var seconds =100;
	var conut = 10;
	var i=0;
	var si = setIntval(function(){
		i= i+1;
		if(i>count){
			clearIntval(si);
			return;
		}
		console.log(123);
	},secondds);
setTimeout( 执行的函数 , 间隔时间【单位：毫秒】 );
定时只执行一次
在这个事件触发之前还可以使用clearTimeout把它停掉。这样就不会触发了。

16.事件
	  页面中发生一个行为、一个动作时触发执行一段JS代码
	常用事件：鼠标事件 键盘事件
	绑定事件处理函数  可以为页面中任何元素绑定一个事件处理函数
  事件冒泡
	当点击一个元素时，这个点击事件会一直向上级传递，所以如果上级也绑定了点击事件，那么上级的事件也会依次被触发！
	我们也可以通过事件对象来阻止事件冒泡【事件向上传递】。
	事件对象：在绑定事件的函数中可以加一个参数，这个参数就是这个事件的对象，参数名可以任意取。
	通过这个事件对象可以获取事件的信息以及控制事件的行为
		target ：事件发生者
		preventDefault() ：阻止默认行为,比如我们可以阻止 a标签点击之后跳转的这个默认行为
		stopPropagation() ：阻止冒泡
		clientX ：触发事件时鼠标的x坐标
		clientY ：触发事件时鼠标的鼠标y坐标
		keyCode ：点击的键盘的按钮

jquery
1.
var hi = function(){ alert("hi") };
hi();
等于...
(function(){ alert("hi") })();
!、+和()一样的效果可以把换成
!function(){ alert("hi") }();
!比()节省一个字符，或者说比()好看些

2.window.jquery
如果你已经加载了jquery文件，那么window.jQuery就是一个合法对象
如果没有加载，那么就是undefined, 逻辑上就是假
假的话就会执行|| 右边的语句

所以整句的含义是：
如果没有加载jquery，那么就加载！（往HTML DOM里面写入script来加载jquery.xx.js）

作用就是保证jquery加载，且只加载一次


php
1.php5引入面向对象，7性能比5快2倍  php3引擎zend
2.在PHP代码中可以输出多余的空格和回车，不会影响程序的运行，【加空格、和换行目的：让代码清晰，美观】
3.如果要运行PHP代码必须要有超文本预处理器【PHP】,下载解压后,使用目录中的php.exe程序来解析PHP的文件
如果运行php.exe时出现以下错误，说明电脑上缺少一个vc++运行库,去其官网下载安装即可
将php.exe配置到环境变量中
说明：默认我们写的程序都是utf8的，但dos里面目前只支持gbk，所以输出中文中乱码，所以目前我们不要输出中文即可！
4.结尾的?>标签可以省略：代表：从<?php从后所有的都当作PHP来执行
5.变量的删除unset
6.大小写 数组的键名区分
7.可变变量
8.数组
两种定义数组的方式：[] 【老版本之后支持这种语法】和 array()
索引/关联数组
多维数组:如果数组中的值又是一个数组就是多维数组
描述多分类下的商品并访问


9.在字符串里面输出数组里的值
10.两种特殊类型：
	resource：资源【图片、文件、数据库连接等等】
	null：空
11.常量
PHP自带一些预定义常量：
	__LINE__：代码所在行号
	__FILE__：代码所在完整路径和文件名。
	__DIR__：代码所在文件的目录
12.函数参数传递 
按引用赋值：如果在变量前面添加 & 号就叫做按引用赋值！
	按引用传递：
	如果在定义函数时，参数前面加上 & ，那么在调用这个函数时，这个参数就是按引用的方式传递的，比如：
	总结：
	如果按引用传递，函数内部使用的就是函数外部的变量  按引用传递时，函数内部修改的就是函数外部的变量
	当一个函数的参数按引用传递时，调用这个函数时，参数只能传递变量

	function test($a){
		$a=200;
	}
	$a=100;
	test($a);
       【分析流程】

  值传递 不同的变量指向不同的内存空间	引用传递 不同的变量指向相同的内存空间
13.数据类型，相互转换和比较
14.在PHP编程时完全不用删除和释放任何资源，只需直接使用变量和资源，PHP会自动把不再使用的内存清除掉，我们不用管：
而且当一个PHP脚本执行完之后，这个脚本占用的所有资源也会被释放掉。
15.参数的默认值
可以在定义函数时指定某些参数可以不传：如果不传就使用默认值
规定：参数中只有【 后 】【几个】【 连续的】 参数可以设置默认值。
function hello($a=3,$b,$c=1,$d=2){} X
function hello($a,$b=1,$c=2,$d){} X

16.变量的作用域
变量作用域分为局部和全局变量：
局部：函数内部定义的变量，只能用在函数内部，只在函数调用的过程中生效，函数执行完之后变量就销毁了。
全局：函数外部定义的变量，只能用在函数外部，全局变量一直存在，直到脚本执行结束，然后才会销毁。
总结：函数内部不能直接使用全局变量。
如果要使用则
global
static
17.可变函数
可以把一个函数的名字保存到一个变量中，然后使用这个变量来调用这个函数：
18.匿名函数：我们可以定义一个没有名字的函数：
用法一、可一个匿名函数保存到一个变量中
用法二、把一个函数做为另一个函数的参数时

19.一台电脑上的数据【网站中的内容】如果想让别人看到，这台电脑上必须要安装一个WEB服务器软件，通过这个软件，
别人就可以通过浏览器连接这个软件来访问这台电脑上的网页了。
20.一台电脑上会同时运行多个服务器软件，比如：web服务器软件、数据库服务器软件、邮件服务器软件、ftp服务器软件等等，
每种服务器在运行时都会监听一个端口号【一个1~65535之间的数字】用以区分不同的服务，
客户端可以通过不同的端口号连接不同的服务器软件。
注意：一个端口号只能同时被一个服务器软件监听。
扩展：当使用浏览器访问一个网站时，浏览器会自动连接服务器的80端口，如果服务器使用了其他端口号，那么必须要访问时明确
指定，比如如果百度web服务器的端口号改为了8080，那么我们在访问百度需要打：www.baidu.com:8080;
一般情况下网站不会修改端口号，只有一些内部测试的功能，只希望一小部分人看到，那么就可以修改一个端口号，
这样只有知道端口号的人才能访问。
世界知名的Web服务器软件
	1.Apache：目前世界排名第一的，特点：历史悠久、安全、稳定、支持的功能模块较多。
	2.Nginx：最近几年刚刚流行的一款高性能、高并发的web服务器软件，由一个俄罗期人开发。
	3.IIS：微软出的WEB服务器，只能运行在windows上。
	4.Tomcat：java经常用这个。
	5.lighttpd

21.php内置函数分类


